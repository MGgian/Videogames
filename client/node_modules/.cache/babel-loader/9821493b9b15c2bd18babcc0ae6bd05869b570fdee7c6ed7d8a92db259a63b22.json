{"ast":null,"code":"// Dentro de este reducer vamos a agregar el estado inicial. Vamos a tener el estado declarado en codigo.\n// import { GET_GAMES, GET_BY_NAME } from \"../actions/action\";\n\n// import { Switch } from \"react-router-dom\";\n\nlet initialState = {\n  allGames: [],\n  allGenres: [],\n  userCopy: [],\n  posts: [],\n  allGamesBackUp: [],\n  currentPage: 0\n};\n\n// function rootReducer(state = initialState, action){\n//     switch(action.type){\n//         case GET_GAMES:\n//             return{\n//                 ...state,\n//                 allGames: action.payload\n//             }\n//         case GET_BY_NAME:\n//             return {\n//                 ...state,\n//                 allGames: action.payload,\n//             }\n//         default:\n//             return {...state}\n//     }\n// }\n\n// export  default rootReducer;\n\nfunction rootReducer(state = initialState, action) {\n  const ITEMS_PER_PAGE = 10;\n  switch (action.type) {\n    case \"GET_GAMES\":\n      return {\n        ...state,\n        allGames: [...action.payload].splice(0, ITEMS_PER_PAGE),\n        allGamesBackUp: action.payload\n      };\n    case \"GET_GENRES\":\n      return {\n        ...state,\n        allGenres: [...action.payload]\n      };\n    case \"PAGINATE\":\n      const next_page = state.currentPage + 1;\n      const prev_page = state.currentPage - 1;\n      const firstIndex = action.payload === \"next\" ? ITEMS_PER_PAGE : prev_page * ITEMS_PER_PAGE;\n      if (action.payload === \"next\" && firstIndex >= state.allGamesBackUp.length) return state;else if (action.payload === \"prev\" && prev_page < 0) return state; //casos de corte, para qeu siga pasando de pagina en pagina \n\n      return {\n        ...state,\n        allGames: [...state.allGamesBackUp].splice(firstIndex, ITEMS_PER_PAGE),\n        currentPage: action.payload === \"next\" ? next_page : prev_page\n      };\n    default:\n      return state;\n      break;\n  }\n}\n;\nexport default rootReducer;","map":{"version":3,"names":["initialState","allGames","allGenres","userCopy","posts","allGamesBackUp","currentPage","rootReducer","state","action","ITEMS_PER_PAGE","type","payload","splice","next_page","prev_page","firstIndex","length"],"sources":["/Users/macuser/Desktop/HENRY/Copia de PI-VIDEOGAMES/client/src/redux/reducer/index.js"],"sourcesContent":["// Dentro de este reducer vamos a agregar el estado inicial. Vamos a tener el estado declarado en codigo.\n// import { GET_GAMES, GET_BY_NAME } from \"../actions/action\";\n\n// import { Switch } from \"react-router-dom\";\n\nlet initialState = {allGames:[],\n     allGenres:[],\n     userCopy: [],\n     posts: [],\n     allGamesBackUp: [],\n     currentPage: 0,\n\n    }\n\n// function rootReducer(state = initialState, action){\n//     switch(action.type){\n//         case GET_GAMES:\n//             return{\n//                 ...state,\n//                 allGames: action.payload\n//             }\n//         case GET_BY_NAME:\n//             return {\n//                 ...state,\n//                 allGames: action.payload,\n//             }\n//         default:\n//             return {...state}\n//     }\n// }\n\n// export  default rootReducer;\n\n\nfunction rootReducer(state = initialState,action){\n    const ITEMS_PER_PAGE = 10;\n    switch (action.type) {\n        case \"GET_GAMES\":\n            return{\n                ...state,\n                allGames: [...action.payload].splice(0, ITEMS_PER_PAGE),\n                allGamesBackUp: action.payload\n            }\n        case \"GET_GENRES\":\n            return{\n                ...state,\n                allGenres: [...action.payload],\n                \n            }\n        case \"PAGINATE\":\n            const next_page = state.currentPage + 1;\n            const prev_page = state.currentPage - 1;\n            const firstIndex = action.payload === \"next\" ? ITEMS_PER_PAGE:prev_page * ITEMS_PER_PAGE;\n\n            if(action.payload === \"next\" && firstIndex >= state.allGamesBackUp.length) return state;\n            else if(action.payload === \"prev\" && prev_page < 0) return state; //casos de corte, para qeu siga pasando de pagina en pagina \n\n            return{\n                ...state,\n                allGames: [...state.allGamesBackUp].splice(firstIndex, ITEMS_PER_PAGE),\n                currentPage: action.payload === \"next\"? next_page : prev_page\n            }\n            \n    \n        default: return state\n            break;\n    \n    }\n\n};\n\n\n\nexport default rootReducer;"],"mappings":"AAAA;AACA;;AAEA;;AAEA,IAAIA,YAAY,GAAG;EAACC,QAAQ,EAAC,EAAE;EAC1BC,SAAS,EAAC,EAAE;EACZC,QAAQ,EAAE,EAAE;EACZC,KAAK,EAAE,EAAE;EACTC,cAAc,EAAE,EAAE;EAClBC,WAAW,EAAE;AAEd,CAAC;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,SAASC,WAAWA,CAACC,KAAK,GAAGR,YAAY,EAACS,MAAM,EAAC;EAC7C,MAAMC,cAAc,GAAG,EAAE;EACzB,QAAQD,MAAM,CAACE,IAAI;IACf,KAAK,WAAW;MACZ,OAAM;QACF,GAAGH,KAAK;QACRP,QAAQ,EAAE,CAAC,GAAGQ,MAAM,CAACG,OAAO,CAAC,CAACC,MAAM,CAAC,CAAC,EAAEH,cAAc,CAAC;QACvDL,cAAc,EAAEI,MAAM,CAACG;MAC3B,CAAC;IACL,KAAK,YAAY;MACb,OAAM;QACF,GAAGJ,KAAK;QACRN,SAAS,EAAE,CAAC,GAAGO,MAAM,CAACG,OAAO;MAEjC,CAAC;IACL,KAAK,UAAU;MACX,MAAME,SAAS,GAAGN,KAAK,CAACF,WAAW,GAAG,CAAC;MACvC,MAAMS,SAAS,GAAGP,KAAK,CAACF,WAAW,GAAG,CAAC;MACvC,MAAMU,UAAU,GAAGP,MAAM,CAACG,OAAO,KAAK,MAAM,GAAGF,cAAc,GAACK,SAAS,GAAGL,cAAc;MAExF,IAAGD,MAAM,CAACG,OAAO,KAAK,MAAM,IAAII,UAAU,IAAIR,KAAK,CAACH,cAAc,CAACY,MAAM,EAAE,OAAOT,KAAK,CAAC,KACnF,IAAGC,MAAM,CAACG,OAAO,KAAK,MAAM,IAAIG,SAAS,GAAG,CAAC,EAAE,OAAOP,KAAK,CAAC,CAAC;;MAElE,OAAM;QACF,GAAGA,KAAK;QACRP,QAAQ,EAAE,CAAC,GAAGO,KAAK,CAACH,cAAc,CAAC,CAACQ,MAAM,CAACG,UAAU,EAAEN,cAAc,CAAC;QACtEJ,WAAW,EAAEG,MAAM,CAACG,OAAO,KAAK,MAAM,GAAEE,SAAS,GAAGC;MACxD,CAAC;IAGL;MAAS,OAAOP,KAAK;MACjB;EAER;AAEJ;AAAC;AAID,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}